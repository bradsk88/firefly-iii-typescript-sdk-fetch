"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v1.5.6
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataApi = void 0;
const runtime = __importStar(require("../runtime"));
/**
 *
 */
class DataApi extends runtime.BaseAPI {
    /**
     * Allows you to update transactions in bulk.
     * Bulk update transaction properties. For more information, see https://docs.firefly-iii.org/firefly-iii/api/specials
     */
    async bulkUpdateTransactionsRaw(requestParameters) {
        if (requestParameters.query === null || requestParameters.query === undefined) {
            throw new runtime.RequiredError('query', 'Required parameter requestParameters.query was null or undefined when calling bulkUpdateTransactions.');
        }
        const queryParameters = {};
        if (requestParameters.query !== undefined) {
            queryParameters['query'] = requestParameters.query;
        }
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            if (typeof this.configuration.accessToken === 'function') {
                headerParameters["Authorization"] = this.configuration.accessToken("firefly_iii_auth", []);
            }
            else {
                headerParameters["Authorization"] = this.configuration.accessToken;
            }
        }
        const response = await this.request({
            path: `/api/v1/data/bulk/transactions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.VoidApiResponse(response);
    }
    /**
     * Allows you to update transactions in bulk.
     * Bulk update transaction properties. For more information, see https://docs.firefly-iii.org/firefly-iii/api/specials
     */
    async bulkUpdateTransactions(requestParameters) {
        await this.bulkUpdateTransactionsRaw(requestParameters);
    }
    /**
     * A call to this endpoint permanently destroys the requested data type. Use it with care and always with user permission. The demo user is incapable of using this endpoint.
     * Endpoint to destroy user data
     */
    async destroyDataRaw(requestParameters) {
        if (requestParameters.objects === null || requestParameters.objects === undefined) {
            throw new runtime.RequiredError('objects', 'Required parameter requestParameters.objects was null or undefined when calling destroyData.');
        }
        const queryParameters = {};
        if (requestParameters.objects !== undefined) {
            queryParameters['objects'] = requestParameters.objects;
        }
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            if (typeof this.configuration.accessToken === 'function') {
                headerParameters["Authorization"] = this.configuration.accessToken("firefly_iii_auth", []);
            }
            else {
                headerParameters["Authorization"] = this.configuration.accessToken;
            }
        }
        const response = await this.request({
            path: `/api/v1/data/destroy`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.VoidApiResponse(response);
    }
    /**
     * A call to this endpoint permanently destroys the requested data type. Use it with care and always with user permission. The demo user is incapable of using this endpoint.
     * Endpoint to destroy user data
     */
    async destroyData(requestParameters) {
        await this.destroyDataRaw(requestParameters);
    }
    /**
     * This endpoint allows you to export your accounts from Firefly III into a file. Currently supports CSV exports only.
     * Export account data from Firefly III
     */
    async exportAccountsRaw(requestParameters) {
        const queryParameters = {};
        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            if (typeof this.configuration.accessToken === 'function') {
                headerParameters["Authorization"] = this.configuration.accessToken("firefly_iii_auth", []);
            }
            else {
                headerParameters["Authorization"] = this.configuration.accessToken;
            }
        }
        const response = await this.request({
            path: `/api/v1/data/export/accounts`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.BlobApiResponse(response);
    }
    /**
     * This endpoint allows you to export your accounts from Firefly III into a file. Currently supports CSV exports only.
     * Export account data from Firefly III
     */
    async exportAccounts(requestParameters) {
        const response = await this.exportAccountsRaw(requestParameters);
        return await response.value();
    }
    /**
     * This endpoint allows you to export your bills from Firefly III into a file. Currently supports CSV exports only.
     * Export bills from Firefly III
     */
    async exportBillsRaw(requestParameters) {
        const queryParameters = {};
        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            if (typeof this.configuration.accessToken === 'function') {
                headerParameters["Authorization"] = this.configuration.accessToken("firefly_iii_auth", []);
            }
            else {
                headerParameters["Authorization"] = this.configuration.accessToken;
            }
        }
        const response = await this.request({
            path: `/api/v1/data/export/bills`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.BlobApiResponse(response);
    }
    /**
     * This endpoint allows you to export your bills from Firefly III into a file. Currently supports CSV exports only.
     * Export bills from Firefly III
     */
    async exportBills(requestParameters) {
        const response = await this.exportBillsRaw(requestParameters);
        return await response.value();
    }
    /**
     * This endpoint allows you to export your budgets and associated budget data from Firefly III into a file. Currently supports CSV exports only.
     * Export budgets and budget amount data from Firefly III
     */
    async exportBudgetsRaw(requestParameters) {
        const queryParameters = {};
        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            if (typeof this.configuration.accessToken === 'function') {
                headerParameters["Authorization"] = this.configuration.accessToken("firefly_iii_auth", []);
            }
            else {
                headerParameters["Authorization"] = this.configuration.accessToken;
            }
        }
        const response = await this.request({
            path: `/api/v1/data/export/budgets`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.BlobApiResponse(response);
    }
    /**
     * This endpoint allows you to export your budgets and associated budget data from Firefly III into a file. Currently supports CSV exports only.
     * Export budgets and budget amount data from Firefly III
     */
    async exportBudgets(requestParameters) {
        const response = await this.exportBudgetsRaw(requestParameters);
        return await response.value();
    }
    /**
     * This endpoint allows you to export your categories from Firefly III into a file. Currently supports CSV exports only.
     * Export category data from Firefly III
     */
    async exportCategoriesRaw(requestParameters) {
        const queryParameters = {};
        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            if (typeof this.configuration.accessToken === 'function') {
                headerParameters["Authorization"] = this.configuration.accessToken("firefly_iii_auth", []);
            }
            else {
                headerParameters["Authorization"] = this.configuration.accessToken;
            }
        }
        const response = await this.request({
            path: `/api/v1/data/export/categories`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.BlobApiResponse(response);
    }
    /**
     * This endpoint allows you to export your categories from Firefly III into a file. Currently supports CSV exports only.
     * Export category data from Firefly III
     */
    async exportCategories(requestParameters) {
        const response = await this.exportCategoriesRaw(requestParameters);
        return await response.value();
    }
    /**
     * This endpoint allows you to export your piggy banks from Firefly III into a file. Currently supports CSV exports only.
     * Export piggy banks from Firefly III
     */
    async exportPiggiesRaw(requestParameters) {
        const queryParameters = {};
        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            if (typeof this.configuration.accessToken === 'function') {
                headerParameters["Authorization"] = this.configuration.accessToken("firefly_iii_auth", []);
            }
            else {
                headerParameters["Authorization"] = this.configuration.accessToken;
            }
        }
        const response = await this.request({
            path: `/api/v1/data/export/piggy-banks`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.BlobApiResponse(response);
    }
    /**
     * This endpoint allows you to export your piggy banks from Firefly III into a file. Currently supports CSV exports only.
     * Export piggy banks from Firefly III
     */
    async exportPiggies(requestParameters) {
        const response = await this.exportPiggiesRaw(requestParameters);
        return await response.value();
    }
    /**
     * This endpoint allows you to export your recurring transactions from Firefly III into a file. Currently supports CSV exports only.
     * Export recurring transaction data from Firefly III
     */
    async exportRecurringRaw(requestParameters) {
        const queryParameters = {};
        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            if (typeof this.configuration.accessToken === 'function') {
                headerParameters["Authorization"] = this.configuration.accessToken("firefly_iii_auth", []);
            }
            else {
                headerParameters["Authorization"] = this.configuration.accessToken;
            }
        }
        const response = await this.request({
            path: `/api/v1/data/export/recurring`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.BlobApiResponse(response);
    }
    /**
     * This endpoint allows you to export your recurring transactions from Firefly III into a file. Currently supports CSV exports only.
     * Export recurring transaction data from Firefly III
     */
    async exportRecurring(requestParameters) {
        const response = await this.exportRecurringRaw(requestParameters);
        return await response.value();
    }
    /**
     * This endpoint allows you to export your rules and rule groups from Firefly III into a file. Currently supports CSV exports only.
     * Export rule groups and rule data from Firefly III
     */
    async exportRulesRaw(requestParameters) {
        const queryParameters = {};
        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            if (typeof this.configuration.accessToken === 'function') {
                headerParameters["Authorization"] = this.configuration.accessToken("firefly_iii_auth", []);
            }
            else {
                headerParameters["Authorization"] = this.configuration.accessToken;
            }
        }
        const response = await this.request({
            path: `/api/v1/data/export/rules`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.BlobApiResponse(response);
    }
    /**
     * This endpoint allows you to export your rules and rule groups from Firefly III into a file. Currently supports CSV exports only.
     * Export rule groups and rule data from Firefly III
     */
    async exportRules(requestParameters) {
        const response = await this.exportRulesRaw(requestParameters);
        return await response.value();
    }
    /**
     * This endpoint allows you to export your tags from Firefly III into a file. Currently supports CSV exports only.
     * Export tag data from Firefly III
     */
    async exportTagsRaw(requestParameters) {
        const queryParameters = {};
        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            if (typeof this.configuration.accessToken === 'function') {
                headerParameters["Authorization"] = this.configuration.accessToken("firefly_iii_auth", []);
            }
            else {
                headerParameters["Authorization"] = this.configuration.accessToken;
            }
        }
        const response = await this.request({
            path: `/api/v1/data/export/tags`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.BlobApiResponse(response);
    }
    /**
     * This endpoint allows you to export your tags from Firefly III into a file. Currently supports CSV exports only.
     * Export tag data from Firefly III
     */
    async exportTags(requestParameters) {
        const response = await this.exportTagsRaw(requestParameters);
        return await response.value();
    }
    /**
     * This endpoint allows you to export transactions from Firefly III into a file. Currently supports CSV exports only.
     * Export transaction data from Firefly III
     */
    async exportTransactionsRaw(requestParameters) {
        if (requestParameters.start === null || requestParameters.start === undefined) {
            throw new runtime.RequiredError('start', 'Required parameter requestParameters.start was null or undefined when calling exportTransactions.');
        }
        if (requestParameters.end === null || requestParameters.end === undefined) {
            throw new runtime.RequiredError('end', 'Required parameter requestParameters.end was null or undefined when calling exportTransactions.');
        }
        const queryParameters = {};
        if (requestParameters.start !== undefined) {
            queryParameters['start'] = requestParameters.start.toISOString().substr(0, 10);
        }
        if (requestParameters.end !== undefined) {
            queryParameters['end'] = requestParameters.end.toISOString().substr(0, 10);
        }
        if (requestParameters.accounts !== undefined) {
            queryParameters['accounts'] = requestParameters.accounts;
        }
        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            if (typeof this.configuration.accessToken === 'function') {
                headerParameters["Authorization"] = this.configuration.accessToken("firefly_iii_auth", []);
            }
            else {
                headerParameters["Authorization"] = this.configuration.accessToken;
            }
        }
        const response = await this.request({
            path: `/api/v1/data/export/transactions`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
        return new runtime.BlobApiResponse(response);
    }
    /**
     * This endpoint allows you to export transactions from Firefly III into a file. Currently supports CSV exports only.
     * Export transaction data from Firefly III
     */
    async exportTransactions(requestParameters) {
        const response = await this.exportTransactionsRaw(requestParameters);
        return await response.value();
    }
}
exports.DataApi = DataApi;
