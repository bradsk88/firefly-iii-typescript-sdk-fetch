/**
 * Firefly III API v1.5.6
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ConfigValueFilter, ConfigValueUpdateFilter, ConfigurationSingle, ModelConfiguration, PolymorphicProperty } from '../models';
export interface GetSingleConfigurationRequest {
    name: ConfigValueFilter;
}
export interface SetConfigurationRequest {
    name: ConfigValueUpdateFilter;
    value: PolymorphicProperty;
}
/**
 *
 */
export declare class ConfigurationApi extends runtime.BaseAPI {
    /**
     * Returns all editable and not-editable configuration values for this Firefly III installation
     * Get Firefly III system configuration values.
     */
    getConfigurationRaw(): Promise<runtime.ApiResponse<Array<ModelConfiguration>>>;
    /**
     * Returns all editable and not-editable configuration values for this Firefly III installation
     * Get Firefly III system configuration values.
     */
    getConfiguration(): Promise<Array<ModelConfiguration>>;
    /**
     * Returns one configuration variable for this Firefly III installation
     * Get a single Firefly III system configuration value
     */
    getSingleConfigurationRaw(requestParameters: GetSingleConfigurationRequest): Promise<runtime.ApiResponse<ConfigurationSingle>>;
    /**
     * Returns one configuration variable for this Firefly III installation
     * Get a single Firefly III system configuration value
     */
    getSingleConfiguration(requestParameters: GetSingleConfigurationRequest): Promise<ConfigurationSingle>;
    /**
     * Set a single configuration value. Not all configuration values can be updated so the list of accepted configuration variables is small.
     * Update configuration value
     */
    setConfigurationRaw(requestParameters: SetConfigurationRequest): Promise<runtime.ApiResponse<ConfigurationSingle>>;
    /**
     * Set a single configuration value. Not all configuration values can be updated so the list of accepted configuration variables is small.
     * Update configuration value
     */
    setConfiguration(requestParameters: SetConfigurationRequest): Promise<ConfigurationSingle>;
}
