/**
 * Firefly III API v1.5.6
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { AvailableBudgetArray, AvailableBudgetSingle, AvailableBudgetStore, AvailableBudgetUpdate } from '../models';
export interface DeleteAvailableBudgetRequest {
    id: string;
}
export interface GetAvailableBudgetRequest {
    id: string;
}
export interface ListAvailableBudgetRequest {
    page?: number;
    start?: Date;
    end?: Date;
}
export interface StoreAvailableBudgetRequest {
    availableBudgetStore: AvailableBudgetStore;
}
export interface UpdateAvailableBudgetRequest {
    id: string;
    availableBudgetUpdate: AvailableBudgetUpdate;
}
/**
 *
 */
export declare class AvailableBudgetsApi extends runtime.BaseAPI {
    /**
     * Delete an available budget. Not much more to say.
     * Delete an available budget.
     */
    deleteAvailableBudgetRaw(requestParameters: DeleteAvailableBudgetRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete an available budget. Not much more to say.
     * Delete an available budget.
     */
    deleteAvailableBudget(requestParameters: DeleteAvailableBudgetRequest): Promise<void>;
    /**
     * Get a single available budget, by ID.
     * Get a single available budget.
     */
    getAvailableBudgetRaw(requestParameters: GetAvailableBudgetRequest): Promise<runtime.ApiResponse<AvailableBudgetSingle>>;
    /**
     * Get a single available budget, by ID.
     * Get a single available budget.
     */
    getAvailableBudget(requestParameters: GetAvailableBudgetRequest): Promise<AvailableBudgetSingle>;
    /**
     * Firefly III allows users to set the amount that is available to be budgeted in so-called \"available budgets\". For example, the user could have 1200,- available to be divided during the coming month. This amount is used on the /budgets page. This endpoint returns all of these amounts and the periods for which they are set.
     * List all available budget amounts.
     */
    listAvailableBudgetRaw(requestParameters: ListAvailableBudgetRequest): Promise<runtime.ApiResponse<AvailableBudgetArray>>;
    /**
     * Firefly III allows users to set the amount that is available to be budgeted in so-called \"available budgets\". For example, the user could have 1200,- available to be divided during the coming month. This amount is used on the /budgets page. This endpoint returns all of these amounts and the periods for which they are set.
     * List all available budget amounts.
     */
    listAvailableBudget(requestParameters: ListAvailableBudgetRequest): Promise<AvailableBudgetArray>;
    /**
     * Creates a new available budget for a specified period. The data required can be submitted as a JSON body or as a list of parameters.
     * Store a new available budget
     */
    storeAvailableBudgetRaw(requestParameters: StoreAvailableBudgetRequest): Promise<runtime.ApiResponse<AvailableBudgetSingle>>;
    /**
     * Creates a new available budget for a specified period. The data required can be submitted as a JSON body or as a list of parameters.
     * Store a new available budget
     */
    storeAvailableBudget(requestParameters: StoreAvailableBudgetRequest): Promise<AvailableBudgetSingle>;
    /**
     * Update existing available budget.
     * Update existing available budget, to change for example the date range of the amount or the amount itself.
     */
    updateAvailableBudgetRaw(requestParameters: UpdateAvailableBudgetRequest): Promise<runtime.ApiResponse<AvailableBudgetSingle>>;
    /**
     * Update existing available budget.
     * Update existing available budget, to change for example the date range of the amount or the amount itself.
     */
    updateAvailableBudget(requestParameters: UpdateAvailableBudgetRequest): Promise<AvailableBudgetSingle>;
}
