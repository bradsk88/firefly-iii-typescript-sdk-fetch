/**
 * Firefly III API v1.5.6
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { AttachmentArray, PiggyBankArray, PiggyBankEventArray, PiggyBankSingle, PiggyBankStore, PiggyBankUpdate } from '../models';
export interface DeletePiggyBankRequest {
    id: string;
}
export interface GetPiggyBankRequest {
    id: string;
}
export interface ListAttachmentByPiggyBankRequest {
    id: string;
    page?: number;
}
export interface ListEventByPiggyBankRequest {
    id: string;
    page?: number;
}
export interface ListPiggyBankRequest {
    page?: number;
}
export interface StorePiggyBankRequest {
    piggyBankStore: PiggyBankStore;
}
export interface UpdatePiggyBankRequest {
    id: string;
    piggyBankUpdate: PiggyBankUpdate;
}
/**
 *
 */
export declare class PiggyBanksApi extends runtime.BaseAPI {
    /**
     * Delete a piggy bank.
     * Delete a piggy bank.
     */
    deletePiggyBankRaw(requestParameters: DeletePiggyBankRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete a piggy bank.
     * Delete a piggy bank.
     */
    deletePiggyBank(requestParameters: DeletePiggyBankRequest): Promise<void>;
    /**
     * Get a single piggy bank.
     * Get a single piggy bank.
     */
    getPiggyBankRaw(requestParameters: GetPiggyBankRequest): Promise<runtime.ApiResponse<PiggyBankSingle>>;
    /**
     * Get a single piggy bank.
     * Get a single piggy bank.
     */
    getPiggyBank(requestParameters: GetPiggyBankRequest): Promise<PiggyBankSingle>;
    /**
     * Lists all attachments.
     * Lists all attachments.
     */
    listAttachmentByPiggyBankRaw(requestParameters: ListAttachmentByPiggyBankRequest): Promise<runtime.ApiResponse<AttachmentArray>>;
    /**
     * Lists all attachments.
     * Lists all attachments.
     */
    listAttachmentByPiggyBank(requestParameters: ListAttachmentByPiggyBankRequest): Promise<AttachmentArray>;
    /**
     * List all events linked to a piggy bank (adding and removing money).
     * List all events linked to a piggy bank.
     */
    listEventByPiggyBankRaw(requestParameters: ListEventByPiggyBankRequest): Promise<runtime.ApiResponse<PiggyBankEventArray>>;
    /**
     * List all events linked to a piggy bank (adding and removing money).
     * List all events linked to a piggy bank.
     */
    listEventByPiggyBank(requestParameters: ListEventByPiggyBankRequest): Promise<PiggyBankEventArray>;
    /**
     * List all piggy banks.
     * List all piggy banks.
     */
    listPiggyBankRaw(requestParameters: ListPiggyBankRequest): Promise<runtime.ApiResponse<PiggyBankArray>>;
    /**
     * List all piggy banks.
     * List all piggy banks.
     */
    listPiggyBank(requestParameters: ListPiggyBankRequest): Promise<PiggyBankArray>;
    /**
     * Creates a new piggy bank. The data required can be submitted as a JSON body or as a list of parameters.
     * Store a new piggy bank
     */
    storePiggyBankRaw(requestParameters: StorePiggyBankRequest): Promise<runtime.ApiResponse<PiggyBankSingle>>;
    /**
     * Creates a new piggy bank. The data required can be submitted as a JSON body or as a list of parameters.
     * Store a new piggy bank
     */
    storePiggyBank(requestParameters: StorePiggyBankRequest): Promise<PiggyBankSingle>;
    /**
     * Update existing piggy bank.
     * Update existing piggy bank.
     */
    updatePiggyBankRaw(requestParameters: UpdatePiggyBankRequest): Promise<runtime.ApiResponse<PiggyBankSingle>>;
    /**
     * Update existing piggy bank.
     * Update existing piggy bank.
     */
    updatePiggyBank(requestParameters: UpdatePiggyBankRequest): Promise<PiggyBankSingle>;
}
