/**
 * Firefly III API v1.5.6
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { AccountTypeFilter, AutocompleteAccount, AutocompleteBill, AutocompleteBudget, AutocompleteCategory, AutocompleteCurrency, AutocompleteCurrencyCode, AutocompleteObjectGroup, AutocompletePiggy, AutocompletePiggyBalance, AutocompleteRecurrence, AutocompleteRule, AutocompleteRuleGroup, AutocompleteTag, AutocompleteTransaction, AutocompleteTransactionID, AutocompleteTransactionType } from '../models';
export interface GetAccountsACRequest {
    query?: string;
    limit?: number;
    date?: string;
    type?: AccountTypeFilter;
}
export interface GetBillsACRequest {
    query?: string;
    limit?: number;
}
export interface GetBudgetsACRequest {
    query?: string;
    limit?: number;
}
export interface GetCategoriesACRequest {
    query?: string;
    limit?: number;
}
export interface GetCurrenciesACRequest {
    query?: string;
    limit?: number;
}
export interface GetCurrenciesCodeACRequest {
    query?: string;
    limit?: number;
}
export interface GetObjectGroupsACRequest {
    query?: string;
    limit?: number;
}
export interface GetPiggiesACRequest {
    query?: string;
    limit?: number;
}
export interface GetPiggiesBalanceACRequest {
    query?: string;
    limit?: number;
}
export interface GetRecurringACRequest {
    query?: string;
    limit?: number;
}
export interface GetRuleGroupsACRequest {
    query?: string;
    limit?: number;
}
export interface GetRulesACRequest {
    query?: string;
    limit?: number;
}
export interface GetTagACRequest {
    query?: string;
    limit?: number;
}
export interface GetTransactionTypesACRequest {
    query?: string;
    limit?: number;
}
export interface GetTransactionsACRequest {
    query?: string;
    limit?: number;
}
export interface GetTransactionsIDACRequest {
    query?: string;
    limit?: number;
}
/**
 *
 */
export declare class AutocompleteApi extends runtime.BaseAPI {
    /**
     * Returns all accounts of the user returned in a basic auto-complete array.
     */
    getAccountsACRaw(requestParameters: GetAccountsACRequest): Promise<runtime.ApiResponse<Array<AutocompleteAccount>>>;
    /**
     * Returns all accounts of the user returned in a basic auto-complete array.
     */
    getAccountsAC(requestParameters: GetAccountsACRequest): Promise<Array<AutocompleteAccount>>;
    /**
     * Returns all bills of the user returned in a basic auto-complete array.
     */
    getBillsACRaw(requestParameters: GetBillsACRequest): Promise<runtime.ApiResponse<Array<AutocompleteBill>>>;
    /**
     * Returns all bills of the user returned in a basic auto-complete array.
     */
    getBillsAC(requestParameters: GetBillsACRequest): Promise<Array<AutocompleteBill>>;
    /**
     * Returns all budgets of the user returned in a basic auto-complete array.
     */
    getBudgetsACRaw(requestParameters: GetBudgetsACRequest): Promise<runtime.ApiResponse<Array<AutocompleteBudget>>>;
    /**
     * Returns all budgets of the user returned in a basic auto-complete array.
     */
    getBudgetsAC(requestParameters: GetBudgetsACRequest): Promise<Array<AutocompleteBudget>>;
    /**
     * Returns all categories of the user returned in a basic auto-complete array.
     */
    getCategoriesACRaw(requestParameters: GetCategoriesACRequest): Promise<runtime.ApiResponse<Array<AutocompleteCategory>>>;
    /**
     * Returns all categories of the user returned in a basic auto-complete array.
     */
    getCategoriesAC(requestParameters: GetCategoriesACRequest): Promise<Array<AutocompleteCategory>>;
    /**
     * Returns all currencies of the user returned in a basic auto-complete array.
     */
    getCurrenciesACRaw(requestParameters: GetCurrenciesACRequest): Promise<runtime.ApiResponse<Array<AutocompleteCurrency>>>;
    /**
     * Returns all currencies of the user returned in a basic auto-complete array.
     */
    getCurrenciesAC(requestParameters: GetCurrenciesACRequest): Promise<Array<AutocompleteCurrency>>;
    /**
     * Returns all currencies of the user returned in a basic auto-complete array. This endpoint is DEPRECATED and I suggest you DO NOT use it.
     */
    getCurrenciesCodeACRaw(requestParameters: GetCurrenciesCodeACRequest): Promise<runtime.ApiResponse<Array<AutocompleteCurrencyCode>>>;
    /**
     * Returns all currencies of the user returned in a basic auto-complete array. This endpoint is DEPRECATED and I suggest you DO NOT use it.
     */
    getCurrenciesCodeAC(requestParameters: GetCurrenciesCodeACRequest): Promise<Array<AutocompleteCurrencyCode>>;
    /**
     * Returns all object groups of the user returned in a basic auto-complete array.
     */
    getObjectGroupsACRaw(requestParameters: GetObjectGroupsACRequest): Promise<runtime.ApiResponse<Array<AutocompleteObjectGroup>>>;
    /**
     * Returns all object groups of the user returned in a basic auto-complete array.
     */
    getObjectGroupsAC(requestParameters: GetObjectGroupsACRequest): Promise<Array<AutocompleteObjectGroup>>;
    /**
     * Returns all piggy banks of the user returned in a basic auto-complete array.
     */
    getPiggiesACRaw(requestParameters: GetPiggiesACRequest): Promise<runtime.ApiResponse<Array<AutocompletePiggy>>>;
    /**
     * Returns all piggy banks of the user returned in a basic auto-complete array.
     */
    getPiggiesAC(requestParameters: GetPiggiesACRequest): Promise<Array<AutocompletePiggy>>;
    /**
     * Returns all piggy banks of the user returned in a basic auto-complete array complemented with balance information.
     */
    getPiggiesBalanceACRaw(requestParameters: GetPiggiesBalanceACRequest): Promise<runtime.ApiResponse<Array<AutocompletePiggyBalance>>>;
    /**
     * Returns all piggy banks of the user returned in a basic auto-complete array complemented with balance information.
     */
    getPiggiesBalanceAC(requestParameters: GetPiggiesBalanceACRequest): Promise<Array<AutocompletePiggyBalance>>;
    /**
     * Returns all recurring transactions of the user returned in a basic auto-complete array.
     */
    getRecurringACRaw(requestParameters: GetRecurringACRequest): Promise<runtime.ApiResponse<Array<AutocompleteRecurrence>>>;
    /**
     * Returns all recurring transactions of the user returned in a basic auto-complete array.
     */
    getRecurringAC(requestParameters: GetRecurringACRequest): Promise<Array<AutocompleteRecurrence>>;
    /**
     * Returns all rule groups of the user returned in a basic auto-complete array.
     */
    getRuleGroupsACRaw(requestParameters: GetRuleGroupsACRequest): Promise<runtime.ApiResponse<Array<AutocompleteRuleGroup>>>;
    /**
     * Returns all rule groups of the user returned in a basic auto-complete array.
     */
    getRuleGroupsAC(requestParameters: GetRuleGroupsACRequest): Promise<Array<AutocompleteRuleGroup>>;
    /**
     * Returns all rules of the user returned in a basic auto-complete array.
     */
    getRulesACRaw(requestParameters: GetRulesACRequest): Promise<runtime.ApiResponse<Array<AutocompleteRule>>>;
    /**
     * Returns all rules of the user returned in a basic auto-complete array.
     */
    getRulesAC(requestParameters: GetRulesACRequest): Promise<Array<AutocompleteRule>>;
    /**
     * Returns all tags of the user returned in a basic auto-complete array.
     */
    getTagACRaw(requestParameters: GetTagACRequest): Promise<runtime.ApiResponse<Array<AutocompleteTag>>>;
    /**
     * Returns all tags of the user returned in a basic auto-complete array.
     */
    getTagAC(requestParameters: GetTagACRequest): Promise<Array<AutocompleteTag>>;
    /**
     * Returns all transaction types returned in a basic auto-complete array. English only.
     */
    getTransactionTypesACRaw(requestParameters: GetTransactionTypesACRequest): Promise<runtime.ApiResponse<Array<AutocompleteTransactionType>>>;
    /**
     * Returns all transaction types returned in a basic auto-complete array. English only.
     */
    getTransactionTypesAC(requestParameters: GetTransactionTypesACRequest): Promise<Array<AutocompleteTransactionType>>;
    /**
     * Returns all transaction descriptions of the user returned in a basic auto-complete array.
     */
    getTransactionsACRaw(requestParameters: GetTransactionsACRequest): Promise<runtime.ApiResponse<Array<AutocompleteTransaction>>>;
    /**
     * Returns all transaction descriptions of the user returned in a basic auto-complete array.
     */
    getTransactionsAC(requestParameters: GetTransactionsACRequest): Promise<Array<AutocompleteTransaction>>;
    /**
     * Returns all transactions, complemented with their ID, of the user returned in a basic auto-complete array. This endpoint is DEPRECATED and I suggest you DO NOT use it.
     */
    getTransactionsIDACRaw(requestParameters: GetTransactionsIDACRequest): Promise<runtime.ApiResponse<Array<AutocompleteTransactionID>>>;
    /**
     * Returns all transactions, complemented with their ID, of the user returned in a basic auto-complete array. This endpoint is DEPRECATED and I suggest you DO NOT use it.
     */
    getTransactionsIDAC(requestParameters: GetTransactionsIDACRequest): Promise<Array<AutocompleteTransactionID>>;
}
