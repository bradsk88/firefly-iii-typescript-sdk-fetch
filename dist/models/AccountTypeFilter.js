"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v1.5.6
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountTypeFilterToJSON = exports.AccountTypeFilterFromJSONTyped = exports.AccountTypeFilterFromJSON = exports.AccountTypeFilter = void 0;
/**
 *
 * @export
 * @enum {string}
 */
var AccountTypeFilter;
(function (AccountTypeFilter) {
    AccountTypeFilter["All"] = "all";
    AccountTypeFilter["Asset"] = "asset";
    AccountTypeFilter["Cash"] = "cash";
    AccountTypeFilter["Expense"] = "expense";
    AccountTypeFilter["Revenue"] = "revenue";
    AccountTypeFilter["Special"] = "special";
    AccountTypeFilter["Hidden"] = "hidden";
    AccountTypeFilter["Liability"] = "liability";
    AccountTypeFilter["Liabilities"] = "liabilities";
    AccountTypeFilter["DefaultAccount"] = "Default account";
    AccountTypeFilter["CashAccount"] = "Cash account";
    AccountTypeFilter["AssetAccount"] = "Asset account";
    AccountTypeFilter["ExpenseAccount"] = "Expense account";
    AccountTypeFilter["RevenueAccount"] = "Revenue account";
    AccountTypeFilter["InitialBalanceAccount"] = "Initial balance account";
    AccountTypeFilter["BeneficiaryAccount"] = "Beneficiary account";
    AccountTypeFilter["ImportAccount"] = "Import account";
    AccountTypeFilter["ReconciliationAccount"] = "Reconciliation account";
    AccountTypeFilter["Loan"] = "Loan";
    AccountTypeFilter["Debt"] = "Debt";
    AccountTypeFilter["Mortgage"] = "Mortgage";
})(AccountTypeFilter = exports.AccountTypeFilter || (exports.AccountTypeFilter = {}));
function AccountTypeFilterFromJSON(json) {
    return AccountTypeFilterFromJSONTyped(json, false);
}
exports.AccountTypeFilterFromJSON = AccountTypeFilterFromJSON;
function AccountTypeFilterFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
exports.AccountTypeFilterFromJSONTyped = AccountTypeFilterFromJSONTyped;
function AccountTypeFilterToJSON(value) {
    return value;
}
exports.AccountTypeFilterToJSON = AccountTypeFilterToJSON;
