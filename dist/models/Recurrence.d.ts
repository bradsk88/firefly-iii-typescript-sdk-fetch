/**
 * Firefly III API v1.5.6
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { RecurrenceRepetition, RecurrenceTransaction, RecurrenceTransactionType } from './';
/**
 *
 * @export
 * @interface Recurrence
 */
export interface Recurrence {
    /**
     *
     * @type {Date}
     * @memberof Recurrence
     */
    readonly createdAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof Recurrence
     */
    readonly updatedAt?: Date;
    /**
     *
     * @type {RecurrenceTransactionType}
     * @memberof Recurrence
     */
    type?: RecurrenceTransactionType;
    /**
     *
     * @type {string}
     * @memberof Recurrence
     */
    title?: string;
    /**
     * Not to be confused with the description of the actual transaction(s) being created.
     * @type {string}
     * @memberof Recurrence
     */
    description?: string;
    /**
     * First time the recurring transaction will fire. Must be after today.
     * @type {Date}
     * @memberof Recurrence
     */
    firstDate?: Date;
    /**
     * Last time the recurring transaction has fired.
     * @type {Date}
     * @memberof Recurrence
     */
    readonly latestDate?: Date | null;
    /**
     * Date until the recurring transaction can fire. Use either this field or repetitions.
     * @type {Date}
     * @memberof Recurrence
     */
    repeatUntil?: Date | null;
    /**
     * Max number of created transactions. Use either this field or repeat_until.
     * @type {number}
     * @memberof Recurrence
     */
    nrOfRepetitions?: number | null;
    /**
     * Whether or not to fire the rules after the creation of a transaction.
     * @type {boolean}
     * @memberof Recurrence
     */
    applyRules?: boolean;
    /**
     * If the recurrence is even active.
     * @type {boolean}
     * @memberof Recurrence
     */
    active?: boolean;
    /**
     *
     * @type {string}
     * @memberof Recurrence
     */
    notes?: string | null;
    /**
     *
     * @type {Array<RecurrenceRepetition>}
     * @memberof Recurrence
     */
    repetitions?: Array<RecurrenceRepetition>;
    /**
     *
     * @type {Array<RecurrenceTransaction>}
     * @memberof Recurrence
     */
    transactions?: Array<RecurrenceTransaction>;
}
export declare function RecurrenceFromJSON(json: any): Recurrence;
export declare function RecurrenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Recurrence;
export declare function RecurrenceToJSON(value?: Recurrence | null): any;
