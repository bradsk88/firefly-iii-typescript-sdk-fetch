/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v1.5.6
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00 
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RuleActionKeyword,
    RuleActionKeywordFromJSON,
    RuleActionKeywordFromJSONTyped,
    RuleActionKeywordToJSON,
} from './';

/**
 * 
 * @export
 * @interface RuleAction
 */
export interface RuleAction {
    /**
     * 
     * @type {string}
     * @memberof RuleAction
     */
    readonly id?: string;
    /**
     * 
     * @type {Date}
     * @memberof RuleAction
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof RuleAction
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {RuleActionKeyword}
     * @memberof RuleAction
     */
    type: RuleActionKeyword;
    /**
     * The accompanying value the action will set, change or update. Can be empty, but for some types this value is mandatory.
     * @type {string}
     * @memberof RuleAction
     */
    value: string | null;
    /**
     * Order of the action
     * @type {number}
     * @memberof RuleAction
     */
    order?: number;
    /**
     * If the action is active. Defaults to true.
     * @type {boolean}
     * @memberof RuleAction
     */
    active?: boolean;
    /**
     * When true, other actions will not be fired after this action has fired. Defaults to false.
     * @type {boolean}
     * @memberof RuleAction
     */
    stopProcessing?: boolean;
}

export function RuleActionFromJSON(json: any): RuleAction {
    return RuleActionFromJSONTyped(json, false);
}

export function RuleActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'type': RuleActionKeywordFromJSON(json['type']),
        'value': json['value'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'active': !exists(json, 'active') ? undefined : json['active'],
        'stopProcessing': !exists(json, 'stop_processing') ? undefined : json['stop_processing'],
    };
}

export function RuleActionToJSON(value?: RuleAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': RuleActionKeywordToJSON(value.type),
        'value': value.value,
        'order': value.order,
        'active': value.active,
        'stop_processing': value.stopProcessing,
    };
}


