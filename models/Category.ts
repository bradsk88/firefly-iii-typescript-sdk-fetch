/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v1.5.6
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00 
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CategoryEarned,
    CategoryEarnedFromJSON,
    CategoryEarnedFromJSONTyped,
    CategoryEarnedToJSON,
    CategorySpent,
    CategorySpentFromJSON,
    CategorySpentFromJSONTyped,
    CategorySpentToJSON,
} from './';

/**
 * 
 * @export
 * @interface Category
 */
export interface Category {
    /**
     * 
     * @type {Date}
     * @memberof Category
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Category
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Category
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Category
     */
    notes?: string | null;
    /**
     * 
     * @type {Array<CategorySpent>}
     * @memberof Category
     */
    readonly spent?: Array<CategorySpent>;
    /**
     * 
     * @type {Array<CategoryEarned>}
     * @memberof Category
     */
    readonly earned?: Array<CategoryEarned>;
}

export function CategoryFromJSON(json: any): Category {
    return CategoryFromJSONTyped(json, false);
}

export function CategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Category {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'name': json['name'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'spent': !exists(json, 'spent') ? undefined : ((json['spent'] as Array<any>).map(CategorySpentFromJSON)),
        'earned': !exists(json, 'earned') ? undefined : ((json['earned'] as Array<any>).map(CategoryEarnedFromJSON)),
    };
}

export function CategoryToJSON(value?: Category | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'notes': value.notes,
    };
}


