/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v1.5.6
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00 
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TagModelStore
 */
export interface TagModelStore {
    /**
     * The tag
     * @type {string}
     * @memberof TagModelStore
     */
    tag: string;
    /**
     * The date to which the tag is applicable.
     * @type {Date}
     * @memberof TagModelStore
     */
    date?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof TagModelStore
     */
    description?: string | null;
    /**
     * Latitude of the tag's location, if applicable. Can be used to draw a map.
     * @type {number}
     * @memberof TagModelStore
     */
    latitude?: number | null;
    /**
     * Latitude of the tag's location, if applicable. Can be used to draw a map.
     * @type {number}
     * @memberof TagModelStore
     */
    longitude?: number | null;
    /**
     * Zoom level for the map, if drawn. This to set the box right. Unfortunately this is a proprietary value because each map provider has different zoom levels.
     * @type {number}
     * @memberof TagModelStore
     */
    zoomLevel?: number | null;
}

export function TagModelStoreFromJSON(json: any): TagModelStore {
    return TagModelStoreFromJSONTyped(json, false);
}

export function TagModelStoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagModelStore {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tag': json['tag'],
        'date': !exists(json, 'date') ? undefined : (json['date'] === null ? null : new Date(json['date'])),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
        'zoomLevel': !exists(json, 'zoom_level') ? undefined : json['zoom_level'],
    };
}

export function TagModelStoreToJSON(value?: TagModelStore | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tag': value.tag,
        'date': value.date === undefined ? undefined : (value.date === null ? null : value.date.toISOString().substr(0,10)),
        'description': value.description,
        'latitude': value.latitude,
        'longitude': value.longitude,
        'zoom_level': value.zoomLevel,
    };
}


