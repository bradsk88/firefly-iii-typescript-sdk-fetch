/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v1.5.6
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00 
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserBlockedCodeProperty,
    UserBlockedCodePropertyFromJSON,
    UserBlockedCodePropertyFromJSONTyped,
    UserBlockedCodePropertyToJSON,
    UserRoleProperty,
    UserRolePropertyFromJSON,
    UserRolePropertyFromJSONTyped,
    UserRolePropertyToJSON,
} from './';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    readonly updatedAt?: Date;
    /**
     * The new users email address.
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * Boolean to indicate if the user is blocked.
     * @type {boolean}
     * @memberof User
     */
    blocked?: boolean;
    /**
     * 
     * @type {UserBlockedCodeProperty}
     * @memberof User
     */
    blockedCode?: UserBlockedCodeProperty | null;
    /**
     * 
     * @type {UserRoleProperty}
     * @memberof User
     */
    role?: UserRoleProperty | null;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'email': json['email'],
        'blocked': !exists(json, 'blocked') ? undefined : json['blocked'],
        'blockedCode': !exists(json, 'blocked_code') ? undefined : UserBlockedCodePropertyFromJSON(json['blocked_code']),
        'role': !exists(json, 'role') ? undefined : UserRolePropertyFromJSON(json['role']),
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'blocked': value.blocked,
        'blocked_code': UserBlockedCodePropertyToJSON(value.blockedCode),
        'role': UserRolePropertyToJSON(value.role),
    };
}


