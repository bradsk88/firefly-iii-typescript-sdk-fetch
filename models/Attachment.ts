/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v1.5.6
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00 
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AttachableType,
    AttachableTypeFromJSON,
    AttachableTypeFromJSONTyped,
    AttachableTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface Attachment
 */
export interface Attachment {
    /**
     * 
     * @type {Date}
     * @memberof Attachment
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Attachment
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {AttachableType}
     * @memberof Attachment
     */
    attachableType: AttachableType;
    /**
     * ID of the model this attachment is linked to.
     * @type {string}
     * @memberof Attachment
     */
    attachableId: string;
    /**
     * MD5 hash of the file for basic duplicate detection.
     * @type {string}
     * @memberof Attachment
     */
    md5?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    filename: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    downloadUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    uploadUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    notes?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    readonly mime?: string;
    /**
     * 
     * @type {number}
     * @memberof Attachment
     */
    readonly size?: number;
}

export function AttachmentFromJSON(json: any): Attachment {
    return AttachmentFromJSONTyped(json, false);
}

export function AttachmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Attachment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'attachableType': AttachableTypeFromJSON(json['attachable_type']),
        'attachableId': json['attachable_id'],
        'md5': !exists(json, 'md5') ? undefined : json['md5'],
        'filename': json['filename'],
        'downloadUrl': !exists(json, 'download_url') ? undefined : json['download_url'],
        'uploadUrl': !exists(json, 'upload_url') ? undefined : json['upload_url'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'mime': !exists(json, 'mime') ? undefined : json['mime'],
        'size': !exists(json, 'size') ? undefined : json['size'],
    };
}

export function AttachmentToJSON(value?: Attachment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attachable_type': AttachableTypeToJSON(value.attachableType),
        'attachable_id': value.attachableId,
        'md5': value.md5,
        'filename': value.filename,
        'download_url': value.downloadUrl,
        'upload_url': value.uploadUrl,
        'title': value.title,
        'notes': value.notes,
    };
}


